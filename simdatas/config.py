##############################Smulation address configuration#########################################
sim_config_path = "./sim_config"  # The address of the simulation configuration file
sim_results_path = "./sim_results"  # The address of the simulation result file
realdata_path = "./simdatas/real_datas"  # The address of the real data file
datas_path = "./simdatas/datas" # The address of the output result file

##############################Smulation configuration##############################
sim_time = "150" # Seconds, the smulator run time
SIM_number = 3  # Number of simulations, number of generated datasets
SIM_PARALLEl = 3 # 1-cpu number, parallel configuration, the calling process simulates at the same time, and the maximum is related to the number of cpus in the device, that is, the number of simulations
Granularity = 1 # Seconds，Configure the time granularity of the output training data
train_time = [30,130] # Seconds, Time to extract the training data
vec_limit = 10 # Mbit,Result file size threshold, if less than the threshold result does not meet the requirements, and delete this simulation

##############################Network configuration################
network = "nsfnet" # real network: nsfnet, GBN, geant；simulation network: BA_20, BA_40
Gsimtopolopy = False # Whether to generate the simulation network topology; True regenerates the network topology and False reads the network topology
node_number = [5,10] # The number of network nodes is generated by simulation
Gattributes = True  # True generates network attributes and False uses existing network attributes
#queue
queue_size = ["51200", "38400", "25600", "19200", "12800"] # bit, randomly selected queue size bit，64,48,32,24,16 X800
network_link_policy = "mix" # queue scheduling strategy. DSCP, FIFO, mix
link_policy = {"DSCP":"EF AF11 AF21 AF31 AF41 BE", "FIFO": "BE" }
"""
DSCP
Best Effort (BE): This is the most common PHB where packets are sent in the order they arrive.
Expedited Forwarding (EF): Provides low latency and low packet loss, suitable for real-time applications such as voice and video.
Assured Forwarding (AFxy): Provides a certain level of bandwidth assurance, where x and y represent different levels and drop precedence
"""
#link
bandwidth_size = ["64000","70400","76800"] # bit
#routing protocol
routing_protocol = "ospf" # ospf rip
routing_awreness_notification = [("10","40")] #OSPF: helloInterval, routerDeadInterval; RIP: updateInterval, routeExpiryTime

############################Traffic configuration##############################################
Gflow = True #Whether to generate traffic or not
packet_length = 800  #bit
# traffic_ser_type = {"EF":0.2, "AF11": 0.2, "AF21":0.2, "AF31":0.2, "AF41":0.1, "BE":0.1} #Proportion of traffic priority types sent
traffic_mode_type = {"On-Off": [[5,10],[5,6],[0.1,0.5]]}
"""
Seconds
"Poisson": [0.1,0.5] ,"On-Off": [[5,10],[3,5],[0.1,0.5]],"Constant": [0.1, 0.5]
"Poisson": [Average,variance] ,"On-Off": [[on],[off],[Average,variance]],"Constant": [low, hight]
"""
flow_start_time = "20" #Seconds, The time at which the flow starts sending packets
flow_density = [0.5]  #[0-1]，Traffic density, the probability of sending traffic to other routers

############################Fault configuration##############################################
Gfault = True
fault_time = [(0,0)] # [(40,50),(45,55),(故障组建类型，node，edge，port50,60),(55,65)] [(fault time, recover time)]
fault_number = [0,0] # Number of components per failure, from A to B
fault_type = "node" # node，edge，port, Faulty component type
